---
import: 
 - NoteIcon from '@/icons/note.astro'
 - AppointmentIcon from '@/icons/schedule.astro'

import { entryTypes } from '@/data/types'
import { toLocal } from '@/utils/date'

const { entry } = Astro.props
console.log(`DEBUG:entry:`, entry)
const { id, type, title, createdAt, date } = entry
---

<a
	href=`/${type}s/${id}`
	class="relative w-full"
>
	<article
		class="flex justify-between items-center my-1 mx-8 px-2 py-1
    hover:scale-[1.05] transition-all duration-300
    border-b border-t border-accent border-opacity-10
    [background:linear-gradient(_90deg,rgba(6,68,105,0)_0%,rgba(6,68,105,0.8645833333333334)_var(--bg-horizontal),rgba(6,68,105,0)_100%_)]"
	>
		<div class="flex items-center gap-1">
			<info class="flex flex-col items-center text-accent text-opacity-50">
				{type === entryTypes.NOTE && <NoteIcon class="size-6" />}
				{type === entryTypes.APPOINTMENT && <AppointmentIcon class="size-6" />}
				<span class="text-xs">
					{type === entryTypes.NOTE && createdAt}
				</span>
			</info>
			<h3 class="text-accent font-bold ms-1 flex items-center justify-evenly">
				{title}
				{
					type === entryTypes.APPOINTMENT && (
						<p class="text-xs ms-2">{toLocal(date)}</p>
					)
				}
			</h3>
		</div>
	</article>
</a>

<script>
	const $entries = document.querySelectorAll('article')
	$entries.forEach(($entry) => {
		$entry.addEventListener('mousemove', (e) => {
			const { x } = e

			const { left, width } = $entry.getBoundingClientRect()
			const horizontal = ((x - left) / width) * 100

			$entry.style.setProperty('--bg-horizontal', `${horizontal.toFixed()}%`)
		})
		$entry.addEventListener('mouseleave', () => {
			$entry.style.setProperty('--bg-horizontal', null)
		})
	})
</script>
