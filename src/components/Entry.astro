---
import NoteIcon from '@/icons/note.astro'
import LocationIcon from '@/icons/location.astro'
import DateIcon from '@/icons/test.astro'
import TimeIcon from '@/icons/time.astro'
import { entryTypes } from '@/data/types'
import { toLocal } from '@/utils/date'

interface Props {
	entry: {
		id: string
		type: entryTypes
		title: string
		description?: string | null
		date?: Date | null
		place?: {
			name: string
			location: string
		} | null
		createdAt?: Date | null
	}
}
const { entry } = Astro.props
const { id, type, title, createdAt, date, place, description } = entry
---

<a
	href=`/${type}s/${id}`
	class="relative w-full"
>
	<article
		class="flex justify-between items-center my-1 mx-8 px-2 py-1
    hover:scale-[1.05] transition-all duration-300
    border-y border-accent border-opacity-10
    [background:linear-gradient(_90deg,rgba(6,68,105,0)_0%,rgba(6,68,105,0.8645833333333334)_var(--bg-horizontal),rgba(6,68,105,0)_100%_)]"
	>
		<div class="flex items-start w-full">
			<info class="flex flex-col items-center text-accent text-opacity-50 me-2">
				{type === entryTypes.NOTE && <NoteIcon class="size-6" />}
				<span class="text-xs">
					{
						type === entryTypes.NOTE &&
							createdAt &&
							toLocal(createdAt, { dateStyle: 'medium' })
					}
				</span>
			</info>

			<content
				class="flex items-center"
				class:list={[type === entryTypes.NOTE && 'flex-col', 'md:flex-row']}
			>
				<h3 class="text-accent font-bold">
					{title}
				</h3>
				{
					type === entryTypes.NOTE && (
						<div class="text-accent text-opacity-50 text-xs ms-2 flex self-center">
							<p class="flex justify-around">{description}</p>
						</div>
					)
				}
				{
					type === entryTypes.APPOINTMENT && (
						<div class="text-accent text-opacity-50 text-xs ms-2 flex flex-row">
							<p class="flex justify-around">
								<DateIcon class="size-4 mx-1" />
								{date && toLocal(date, { dateStyle: 'medium' })}
							</p>
							<p class="flex justify-around">
								<TimeIcon class="size-4 mx-1" />
								{date && toLocal(date, { timeStyle: 'short' })}
							</p>
							<p class="hidden md:flex ms-1 ">
								<LocationIcon class="size-4" />
								{place && place.name}
							</p>
						</div>
					)
				}
			</content>
		</div>
	</article>
</a>

<script>
	document.addEventListener('astro:page-load', () => {
		const $entries = document.querySelectorAll('article')
		$entries.forEach(($entry) => {
			$entry.addEventListener('mousemove', (e) => {
				const { x } = e
				const { left, width } = $entry.getBoundingClientRect()
				const horizontal = ((x - left) / width) * 100
				$entry.style.setProperty('--bg-horizontal', `${horizontal.toFixed()}%`)
			})
			$entry.addEventListener('mouseleave', () => {
				$entry.style.setProperty('--bg-horizontal', null)
			})
		})
	})
</script>
