---
import { db, Notes, Todos, eq } from 'astro:db'

import Layout from '@/layouts/Layout.astro'
import FormInput from '@/components/FormInput.astro'
import { toLocal } from '@/utils/date'

const { id } = Astro.params
if (!id) {
	throw new Error('Note id is required')
}

const [note] = await db.select().from(Notes).where(eq(Notes.id, id))

const todos = await db
	.select({ title: Todos.title, completed: Todos.completed })
	.from(Todos)
	.where(eq(Todos.noteId, id))
console.log(`DEBUG:todos:`, todos)

const edit = toLocal(new Date(), { timeStyle: 'short' })
---

<Layout
	title={'note.title'}
	backAction=""
>
	<main class="w-full max-w-5xl mt-2 text-primary text-lg">
		<form class="flex flex-col w-full bg-background rounded-lg p-6">
			<FormInput
				class="text-2xl font-bold text-accent"
				name="title"
				placeholder="TÃ­tulo"
				value={note.title}
			/>
			<!-- <FormInput
				class="border-l-4 border-accent ps-2 my-4"
				name="description"
				type="textarea"
				value={note.description}
			/> -->

			<FormInput
				class="w-full text-pretty text-lg p-2 my-4"
				name="content"
				type="textarea"
				placeholder={note.content || 'Nota'}
				value={note.content}
			/>

			{
				!!todos.length && (
					<div class="flex flex-col my-4">
						<h3 class="text-xl font-bold">To do</h3>
						<ul class="list-disc list-inside">
							{todos.map((todo) => (
								<li>{todo.completed}</li>
							))}
						</ul>
					</div>
				)
			}
			<p>
				[type: string] style bar - (maybe move to the bottomBar)
				<small class="my-2">Editado {edit}</small>
			</p>
		</form>
	</main>
</Layout>

<script>
	document.addEventListener('astro:page-load', () => {
		const back = document.querySelector(`#back-btn`)
		const form = document.querySelector(`form`) as HTMLFormElement

		const saveNote = async () => {
			const formData = new FormData(form)
			const data = Object.fromEntries(formData)
			const id = document.location?.pathname.split(`/`).pop()

			if (id) data.id = id

			const response = await window.fetch('/api/notes', {
				method: 'POST',
				body: JSON.stringify(data),
				headers: {
					'Content-Type': `application/json`,
				},
			})
			console.log(`DEBUG:response in [id]:`, response)
			// if (response.ok) {
			// 	console.log(`response ok`)
			// 	window.location.href = `/`
			// } else {
			// 	console.error(`Error:`, response)
			// }
		}

		back?.addEventListener(`click`, async () => {
			await saveNote()
			window.history.back()
		})

		form?.addEventListener(`submit`, async (e) => {
			e.preventDefault()
			await saveNote()
		})
	})
</script>
