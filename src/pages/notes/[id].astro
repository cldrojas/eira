---
import { db, Notes, Todos, eq } from 'astro:db'

import Layout from '@/layouts/Layout.astro'
import FormInput from '@/components/FormInput.astro'
import { toLocal } from '@/utils/date'

const { id } = Astro.params
if (!id) {
	throw new Error('Note id is required')
}

const res = await db.select().from(Notes).where(eq(Notes.id, id))
 
const [note] = res

const todos = await db
	.select({ title: Todos.title, completed: Todos.completed })
	.from(Todos)
	.where(eq(Todos.noteId, id))

const edit = toLocal(new Date(), { timeStyle: 'short' })
---

<Layout
	title={note.title}
	actionBar
>
	<main class="w-full max-w-5xl mt-2 text-primary text-lg">
		<form
			method="POST"
			class="flex flex-col w-full bg-background rounded-lg p-6"
		>
			<FormInput
				class="text-2xl font-bold text-accent"
				name="title"
				placeholder="TÃ­tulo"
				value={note.title}
			/>
			<FormInput
				class="border-l-4 border-accent ps-2 my-4"
				name="description"
				type="textarea"
				value={note.description}
			/>

			<FormInput
				class="w-full text-pretty text-lg p-2 my-4"
				name="content"
				type="textarea"
				placeholder={note.content || 'Nota'}
				value={note.content}
			/>

			{
				todos && (
					<div class="flex flex-col my-4">
						<h3 class="text-xl font-bold">To do</h3>
						<ul class="list-disc list-inside">
							{todos.map((todo) => (
								<li>{todo.completed}</li>
							))}
						</ul>
					</div>
				)
			}
			<p>
				text style bar -
				<small class="my-2">Editado {edit}</small>
			</p>
		</form>
	</main>
</Layout>
